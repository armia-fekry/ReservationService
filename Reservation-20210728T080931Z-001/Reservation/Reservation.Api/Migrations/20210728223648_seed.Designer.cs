// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservation.DataAccess;

namespace Reservation.Api.Migrations
{
    [DbContext(typeof(ReservationContext))]
    [Migration("20210728223648_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservation.Models.Models.ReservationModel", b =>
                {
                    b.Property<int>("ResevationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservedBy")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("ResevationId");

                    b.HasIndex("ReservedBy");

                    b.HasIndex("TripId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ResevationId = 1,
                            CreationDate = new DateTime(2021, 7, 28, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(4010),
                            CustomerName = "cust one",
                            Notes = "this is notes ",
                            ReservationDate = new DateTime(2021, 7, 31, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(4735),
                            ReservedBy = 1,
                            TripId = 2
                        },
                        new
                        {
                            ResevationId = 2,
                            CreationDate = new DateTime(2021, 7, 28, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(7058),
                            CustomerName = "cust two",
                            Notes = "this is notes two ",
                            ReservationDate = new DateTime(2021, 7, 31, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(7063),
                            ReservedBy = 1,
                            TripId = 2
                        });
                });

            modelBuilder.Entity("Reservation.Models.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("TripId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            CityName = "cairo",
                            Content = "test",
                            CreationDate = new DateTime(2021, 7, 28, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(219),
                            ImageUrl = "test",
                            Name = "cairo trip",
                            Price = 23.399999999999999
                        },
                        new
                        {
                            TripId = 2,
                            CityName = "Alex",
                            Content = "test",
                            CreationDate = new DateTime(2021, 8, 27, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(2526),
                            ImageUrl = "test",
                            Name = "alex trip",
                            Price = 233.40000000000001
                        },
                        new
                        {
                            TripId = 3,
                            CityName = "misr",
                            Content = "test",
                            CreationDate = new DateTime(2021, 8, 12, 22, 36, 48, 266, DateTimeKind.Utc).AddTicks(2688),
                            ImageUrl = "test",
                            Name = "misr trip",
                            Price = 900.0
                        });
                });

            modelBuilder.Entity("Reservation.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Email = "Armia@fekry.com",
                            PasswordHash = new byte[] { 181, 45, 32, 255, 250, 23, 114, 94, 238, 34, 159, 108, 100, 1, 120, 207, 246, 175, 31, 173, 14, 213, 79, 59, 55, 162, 32, 162, 92, 201, 93, 176, 32, 147, 128, 141, 200, 27, 152, 39, 89, 52, 194, 18, 187, 42, 185, 138, 164, 235, 70, 82, 251, 46, 179, 59, 126, 231, 143, 241, 4, 83, 91, 252 },
                            PasswordSalt = new byte[] { 106, 33, 10, 19, 143, 40, 72, 170, 144, 229, 81, 223, 77, 54, 191, 140, 105, 23, 85, 185, 248, 250, 248, 23, 49, 128, 108, 71, 36, 42, 30, 9, 243, 150, 122, 212, 182, 19, 169, 101, 49, 65, 215, 226, 170, 90, 65, 162, 139, 182, 128, 252, 52, 0, 96, 138, 121, 181, 187, 35, 246, 183, 9, 208, 238, 152, 178, 162, 252, 120, 107, 54, 116, 255, 60, 240, 168, 145, 32, 108, 164, 183, 135, 22, 193, 11, 198, 186, 113, 249, 228, 23, 195, 139, 31, 5, 54, 49, 223, 131, 57, 77, 164, 99, 66, 69, 40, 218, 24, 21, 203, 113, 206, 50, 26, 55, 97, 196, 240, 9, 2, 30, 62, 42, 61, 18, 22, 149 }
                        });
                });

            modelBuilder.Entity("Reservation.Models.Models.ReservationModel", b =>
                {
                    b.HasOne("Reservation.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ReservedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservation.Models.Models.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
